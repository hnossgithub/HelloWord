/**
You are given two linked lists representing two non-negative numbers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.

Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
Output: 7 -> 0 -> 8
*/
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode cur = new ListNode(0);
        ListNode head = cur;
        int val1 = 0, val2 = 0, carry=0;
        while(l1!=null || l2!=null || carry!=0){
            val1 = l1==null?0:l1.val;
            val2 = l2==null?0:l2.val;
            int sum = val1+val2+carry;
            carry = sum/10;
            cur.next = new ListNode(sum%10);
            l1 = l1==null?l1:l1.next;
            l2 = l2==null?l2:l2.next;
            cur = cur.next;
        }
        return head.next;
    }
}
